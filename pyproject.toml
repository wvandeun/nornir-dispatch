[tool.poetry]
name = "nornir-dispatch"
version = "0.2.0"
description = "Nornir Dispatch"
authors = ["OpsMill <info@opsmill.com>"]
license = "Apache-2.0"
readme = "README.md"
homepage = "https://opsmill.io"
repository = "https://github.com/opsmill/nornir-dispatch"
documentation = "https://opsmill.io"
classifiers = [
    "Intended Audience :: Developers",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]

[tool.poetry.dependencies]
python = "^3.8, <3.13"
nornir = "^3.4.1"

[tool.poetry.group.dev.dependencies]
pytest = "*"
mypy = "*"
ruff = "0.4.1"
invoke = "^2.2.0"

[tool.coveragerun]
branch = true

[tool.coverage.report]
exclude_lines = [
    "if TYPE_CHECKING:",
    "raise NotImplementedError()"
]

[tool.pytest.ini_options]
testpaths = [
    "tests"
]
filterwarnings = [
    "ignore:pkg_resources is deprecated",
]
addopts = "-vs"


[tool.mypy]
pretty = true
ignore_missing_imports = true

[tool.ruff]
line-length = 120

[tool.ruff.lint]
select = [
    "C90",      # mccabe
    "ASYNC",    # flake8-async
    "DTZ",      # flake8-datetimez
    "E",        # style errors
    "F",        # flakes
    "I",        # isort
    "ICN",      # flake8-import-conventions
    "TCH",      # flake8-type-checking
    "T10",      # flake8-debugger
    "PL",       # pylint
    "Q",        # flake8-quotes
    "W",        # pycodestyle
    "YTT",      # flake8-2020
]

[tool.ruff.lint.mccabe]
max-complexity = 15

[tool.ruff.lint.isort]
known-third-party = ["nornir_dispatch"]

[tool.ruff.lint.per-file-ignores]
[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
